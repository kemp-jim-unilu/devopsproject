image: maven:latest

stages:
  - build
  - upload
  - docker push
  - test
  - deploy

cache:
  paths:
    - target/

# build backend jar
build_backend:
  image: gradle:8.3
  stage: build
  tags:
    - integration
  script:
    - cd lu.uni.e4l.platform.api.dev/
    - gradle clean build bootJar
    - ls -al
  artifacts:
    paths:
      - lu.uni.e4l.platform.api.dev/build/libs/*.jar

# build frontend
build_frontend:
  image: node:15
  stage: build
  tags:
    - integration
  script:
    - cd lu.uni.e4l.platform.frontend.dev/
    - npm install --save-dev webpack
    - npm run build
    - ls -al
    - ls -al e4l.frontend.docker/web/dist/
  artifacts:
    paths:
      - lu.uni.e4l.platform.frontend.dev/e4l.frontend.docker/web/

# save backend to artefact repo
upload_backend:
    stage: upload
    tags:
    - integration-shell
    script:
    - cp lu.uni.e4l.platform.api.dev/build/libs/*.jar /shared/artefact-repository/backend/backend-$CI_COMMIT_SHA

# save frontend to artefact repo
upload_frontend:
    stage: upload
    tags:
    - integration-shell
    script:
    - cp lu.uni.e4l.platform.frontend.dev/e4l.frontend.docker/web/ /shared/artefact-repository/frontend/frontend-$CI_COMMIT_SHA -r

# build backend docker image and upload to registry
docker_backend:
  stage: docker push
  tags:
    - integration-2
  script:
  - cd lu.uni.e4l.platform.api.dev
  - ls -al
  - docker build -t lu.uni.e4l.platform.backend.dev:rc .
  - docker image ls
  - docker login -u "admin" -p "password" 192.168.33.8:5000
  - docker tag lu.uni.e4l.platform.backend.dev:rc 192.168.33.8:5000/backend-$CI_COMMIT_SHA:rc
  - docker push 192.168.33.8:5000/backend-$CI_COMMIT_SHA:rc
  - docker image rm 192.168.33.8:5000/backend-$CI_COMMIT_SHA:rc
  - docker image prune
  - docker logout

# build frontend docker image and upload to registry
docker_frontend:
  stage: docker push
  tags:
  - integration-2
  script:
  - cd lu.uni.e4l.platform.frontend.dev/
  - ls -al
  - ls -al ./e4l.frontend.docker/web
  - docker build -t lu.uni.e4l.platform.frontend.dev:rc ./e4l.frontend.docker/web
  - docker image ls
  - docker login -u "admin" -p "password" 192.168.33.8:5000
  - docker tag lu.uni.e4l.platform.frontend.dev:rc 192.168.33.8:5000/frontend-$CI_COMMIT_SHA:rc
  - docker push 192.168.33.8:5000/frontend-$CI_COMMIT_SHA:rc
  - docker image rm 192.168.33.8:5000/frontend-$CI_COMMIT_SHA:rc
  - docker image prune
  - docker logout

dummy_test:
  stage: test
  tags:
  - integration-2
  script:
  - exit 0

# deploy all three containers
deploy_prod:
  stage: deploy
  tags:
  - integration-2
  script:
  - docker container stop e4l-backend-preprod || true
  - docker container stop e4l-frontend-preprod || true
  - docker container stop e4l-db || true
  - docker container rm e4l-backend-preprod || true
  - docker container rm e4l-frontend-preprod || true
  - docker container rm e4l-db || true
  - docker image rm lu.uni.e4l.platform.backend.dev:rc || true
  - docker image rm lu.uni.e4l.platform.frontend.dev:rc || true
  - docker image rm mariadb:10.4.7 || true
  - docker network rm e4l-db-net || true
  - docker login -u "admin" -p "password" 192.168.33.8:5000
  - docker pull 192.168.33.8:5000/frontend-$CI_COMMIT_SHA:rc
  - docker pull 192.168.33.8:5000/backend-$CI_COMMIT_SHA:rc
  - docker tag 192.168.33.8:5000/backend-$CI_COMMIT_SHA:rc lu.uni.e4l.platform.backend.dev:rc
  - docker tag 192.168.33.8:5000/frontend-$CI_COMMIT_SHA:rc lu.uni.e4l.platform.frontend.dev:rc
  - cd lu.uni.e4l.platform.api.dev
  - docker compose -f ./docker/docker-compose.db.yml up -d
  - docker compose -f ./docker/docker-compose.backend.pre-prod.yml up -d
  - cd ../lu.uni.e4l.platform.frontend.dev
  - docker compose -f ./e4l.frontend.docker/docker-compose.frontend.pre-prod.yml up -d
